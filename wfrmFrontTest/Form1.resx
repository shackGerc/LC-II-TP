<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbNotExpand.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAahJREFUSEvF
        lckuBUEUhu+SEAlBCHvDQ5hexBC8AvFOhrUhMawMKxamxIY9wp7v63Rd121ddZub+JMv6Tp16lR3nVOn
        a/+tPliCHbiB9xyftTmnT2V1wga8wkeCF9DXNS1pFC4gBNiFZRiDrpxxWIE9CH6uGYGoDP4ELriFKUhp
        Gu7ANa4t3cRPDG9+CL3QqvQ9AteeQQcU5DmGN68SPMhk34Mx1jU0ysmQ0NixnIBfOZiNipoBY5j4by9p
        uTlhQmPy8/W7grJN9kGfhWyUy5rWaLXENACXoO81DEOzVsH5rWyUy3PXaCmmlNrEEnbOy1jXG2jszkZf
        8sy1x3Bto4xRsLdzgx7QbtHU9ZcjGoJG/XhE26CxapKbg6uQ5M1slGsRNNpbYmqlTA9An/lslMuL5uVw
        wt5SptRFmwNjPEOhG4RW8QD9GiqqsVWsaWiWDeocdLBxVelHBj8G15Y2O2WrDe3aFmxvSWkWwps/QvKf
        oENIpthbrIwJ8J7IZG4LCZVTSAYP8hNtuSHxMUyoZ156LDGZB7uijcu699aKz9qc+82/o12q1T4B9mSj
        2q6kOf8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="PbExpand.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGqSURBVEhLxZXJSsRAEIZzVBRBUVH07vIQbi/igvoKiu/kcnYBl5PLSQ9u4EXvKnrX7wvpcZxJ
        0okM+MMH6eqqSqeru5L8twZgBfbgDj4zfNbmnD611Q1b8A5fEd5AX2MqaRyuICTYh1WYgJ6MSViDAwh+
        xoxBqUz+AgbcwwzENAsPYIyxhS/xE8PKj6EfqkrfEzD2ArqgTe5jWHmd5EEW+xHMsamhWU6GghZtyzD4
        hWfpKF9zYA4L/2uRHjcnLGieTH4D+rgFZToE/ZbSUSbPtEZPS6uG4Bqcv4URKNM66LuTjjK57xo9is2q
        m1x5hPX3Mjb0ARp709GPgr2M1pqYQ7uxDXXyBX2g3UPTUNUtGoWYcrdoFzRWKXLsJaHI2+ko0zJotLfk
        qc4xPQL9FtNRJi+al8MJe0ueqly0BTDHK7R1g9AqnmBQQ001t4oNDa2yQV2CDjauOv3I5KdgbGGzU7ba
        0K5twfaWmOYhrPwZov8EHVyFAWJv8WRMgfdEpjNbKKicQzR5kJ9oyw2FL8OCuueF21Im62BXtHF5B7zZ
        4rM25/7y7+iUkuQb0YOj2v1+mYsAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="SideBarTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>